{"version":3,"file":"component---src-pages-blog-index-js-ff3ecb2ce17ed9384b81.js","mappings":"uIA+BA,IA1BY,IAAuC,IAAtC,MAAEA,EAAK,YAAEC,EAAW,SAAEC,GAAU,EAC3C,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAW5B,OACE,gCACE,6BACGJ,EAAM,MAAIG,EAAKE,KAAKC,aAAaN,OAEpC,wBACEO,KAAK,cACLC,QAASP,GAAeE,EAAKE,KAAKC,aAAaL,cAEhDC,EACA,C,6GCrBA,MAuCMO,EAAO,IAClB,gBAAC,IAAG,CACFT,MAAM,OACNC,YAAY,gGAIhB,UA7BiB,IAAe,IAAd,KAAEE,GAAM,EACxB,OACE,gBAAC,IAAM,CAACO,UAAU,QACfP,EAAKQ,OAAOC,MAAMC,KAAKC,GACtB,2BAASC,IAAKD,EAAKE,IACjB,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAE,SAAWJ,EAAKK,YAAYC,MACjCN,EAAKK,YAAYnB,QAGtB,yBACE,wBAAMqB,SAAUP,EAAKK,YAAYG,SAC9BR,EAAKK,YAAYI,OAGtB,yBAAIT,EAAKU,YAGN,C","sources":["webpack://henry-chong/./src/components/seo.js","webpack://henry-chong/./src/pages/blog/index.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\n//Todo: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/ <-- follow this properly - currently just shortcutting and using title and description only\r\n\r\nconst Seo = ({ title, description, children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <>\r\n      <title>\r\n        {title} | {data.site.siteMetadata.title}\r\n      </title>\r\n      <meta\r\n        name=\"description\"\r\n        content={description || data.site.siteMetadata.description}\r\n      />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Seo;\r\n","import * as React from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport Layout from \"../../components/layout\";\r\nimport Seo from \"../../components/seo\";\r\n\r\n//graphQL Tag Function will automatically pass the result of this GraphQL query into the component props as \"data\"\r\nexport const blogQuery = graphql`\r\n  query {\r\n    allMdx(sort: { frontmatter: { date: DESC } }) {\r\n      nodes {\r\n        id\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"D MMM yyyy\")\r\n          isoDate: date(formatString: \"yyyy-MM-DD\")\r\n          slug\r\n        }\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst BlogPage = ({ data }) => {\r\n  return (\r\n    <Layout pageTitle=\"Blog\">\r\n      {data.allMdx.nodes.map((node) => (\r\n        <article key={node.id}>\r\n          <h2>\r\n            <Link to={`/blog/${node.frontmatter.slug}`}>\r\n              {node.frontmatter.title}\r\n            </Link>\r\n          </h2>\r\n          <p>\r\n            <time dateTime={node.frontmatter.isoDate}>\r\n              {node.frontmatter.date}\r\n            </time>\r\n          </p>\r\n          <p>{node.excerpt}</p>\r\n        </article>\r\n      ))}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const Head = () => (\r\n  <Seo\r\n    title=\"Blog\"\r\n    description=\"Henry Chong's personal blog, with writing about adventures in the tech industry and beyond.\"\r\n  />\r\n);\r\n\r\nexport default BlogPage;\r\n"],"names":["title","description","children","data","useStaticQuery","site","siteMetadata","name","content","Head","pageTitle","allMdx","nodes","map","node","key","id","Link","to","frontmatter","slug","dateTime","isoDate","date","excerpt"],"sourceRoot":""}