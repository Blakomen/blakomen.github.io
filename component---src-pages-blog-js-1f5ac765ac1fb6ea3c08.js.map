{"version":3,"file":"component---src-pages-blog-js-1f5ac765ac1fb6ea3c08.js","mappings":"qKAcA,MAVoB,IAAuB,IAAtB,GAAEA,EAAE,SAAEC,GAAU,EACnC,OACE,sBAAIC,UCLiB,4CDMnB,gBAAC,KAAI,CAACA,UCLa,2CDKWF,GAAIA,GAC/BC,GAEA,EEwBT,MA7Be,IAA8B,IAA7B,UAAEE,EAAS,SAAEF,GAAU,EACrC,MAAMG,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACE,uBAAKH,UChBc,mCDiBjB,0BAAQA,UCfS,oCDecE,EAAKE,KAAKC,aAAaC,OACtD,2BACE,sBAAIN,UClBU,mCDmBZ,gBAAC,EAAW,CAACF,GAAG,KAAI,QACpB,gBAAC,EAAW,CAACA,GAAG,UAAS,SACzB,gBAAC,EAAW,CAACA,GAAG,SAAQ,UAG5B,4BACE,0BAAKG,GACJF,GAEC,C,+CECV,IA1BY,IAAuC,IAAtC,MAAEO,EAAK,YAAEC,EAAW,SAAER,GAAU,EAC3C,MAAMG,GAAOC,EAAAA,EAAAA,IAAe,cAW5B,OACE,gCACE,6BACGG,EAAM,MAAIJ,EAAKE,KAAKC,aAAaC,OAEpC,wBACEE,KAAK,cACLC,QAASF,GAAeL,EAAKE,KAAKC,aAAaE,cAEhDR,EACA,C,mGCrBA,MAsBMW,EAAO,IAAM,gBAAC,IAAG,CAACJ,MAAM,SAErC,UAdiB,IAAe,IAAd,KAAEJ,GAAM,EACxB,OACE,gBAAC,IAAM,CAACD,UAAU,QAChB,0BACGC,EAAKS,QAAQC,MAAMC,KAAKC,GACvB,sBAAIC,IAAKD,EAAKN,MAAOM,EAAKN,SAGvB,C","sources":["webpack://henry-chong/./src/components/navLinkItem.js","webpack://henry-chong/./src/components/navLinkItem.module.css","webpack://henry-chong/./src/components/layout.js","webpack://henry-chong/./src/components/layout.module.css","webpack://henry-chong/./src/components/seo.js","webpack://henry-chong/./src/pages/blog.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { navLinkItem, navLinkText } from \"./navLinkItem.module.css\";\n\nconst NavLinkItem = ({ to, children }) => {\n  return (\n    <li className={navLinkItem}>\n      <Link className={navLinkText} to={to}>\n        {children}\n      </Link>\n    </li>\n  );\n};\n\nexport default NavLinkItem;\n","// extracted by mini-css-extract-plugin\nexport var navLinkItem = \"navLinkItem-module--nav-link-item--cd29f\";\nexport var navLinkText = \"navLinkItem-module--nav-link-text--f4a50\";","import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport NavLinkItem from \"./navLinkItem\";\nimport { container, siteTitle, navLinks } from \"./layout.module.css\";\n\nconst Layout = ({ pageTitle, children }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className={container}>\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\n      <nav>\n        <ul className={navLinks}>\n          <NavLinkItem to=\"/\">Home</NavLinkItem>\n          <NavLinkItem to=\"/about\">About</NavLinkItem>\n          <NavLinkItem to=\"/blog\">Blog</NavLinkItem>\n        </ul>\n      </nav>\n      <main>\n        <h1>{pageTitle}</h1>\n        {children}\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","import * as React from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\n//Todo: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/ <-- follow this properly - currently just shortcutting and using title and description only\r\n\r\nconst Seo = ({ title, description, children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <>\r\n      <title>\r\n        {title} | {data.site.siteMetadata.title}\r\n      </title>\r\n      <meta\r\n        name=\"description\"\r\n        content={description || data.site.siteMetadata.description}\r\n      />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Seo;\r\n","import * as React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport Seo from \"../components/seo\";\r\n\r\n//graphQL Tag Function will automatically pass the result of this GraphQL query into the component props as \"data\"\r\nexport const blogQuery = graphql`\r\n  query {\r\n    allFile(sort: { birthTime: DESC }) {\r\n      nodes {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst BlogPage = ({ data }) => {\r\n  return (\r\n    <Layout pageTitle=\"Blog\">\r\n      <ul>\r\n        {data.allFile.nodes.map((node) => (\r\n          <li key={node.name}>{node.name}</li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const Head = () => <Seo title=\"Blog\" />;\r\n\r\nexport default BlogPage;\r\n"],"names":["to","children","className","pageTitle","data","useStaticQuery","site","siteMetadata","title","description","name","content","Head","allFile","nodes","map","node","key"],"sourceRoot":""}